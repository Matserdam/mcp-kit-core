name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  node-build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run build
      - run: node scripts/check-budgets.mjs
      - run: npm run lint
      - run: npm run check:types
      - run: npm test
      - run: node scripts/check-rpc-order.mjs

  deno-verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Deno version
        run: deno --version
      - name: Deno format check
        run: deno fmt --check
      - name: Deno lint
        run: deno lint
      - name: Deno type check edge entry
        run: deno check src/index.edge.ts
      - name: Deno tests (if any)
        run: deno test -A
      - name: JSR dry run publish
        run: deno publish --dry-run

  bun-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.43
      - name: Install dependencies
        run: bun install
      - name: Build project
        run: bun run build
      - name: Run tests
        run: bun run test
      - name: Run linting
        run: bun run lint
      - name: Check size budgets
        run: |
          echo "üì¶ Checking size budgets..."
          if [ -d dist ]; then
            DIST_SIZE=$(du -sk dist/ | cut -f1)
            echo "üìä Total dist size: ${DIST_SIZE}KB"
            if [ "$DIST_SIZE" -gt 600 ]; then
              echo "‚ùå Size budget exceeded: ${DIST_SIZE}KB > 600KB"; exit 1; fi
            LARGEST_FILE=$(find dist/ -type f -name "*.js" -exec du -k {} + | sort -nr | head -1)
            LARGEST_SIZE=$(echo "$LARGEST_FILE" | cut -f1)
            LARGEST_NAME=$(echo "$LARGEST_FILE" | cut -f2)
            echo "üìÑ Largest file: $LARGEST_NAME (${LARGEST_SIZE}KB)"
            if [ -n "$LARGEST_SIZE" ] && [ "$LARGEST_SIZE" -gt 200 ]; then
              echo "‚ùå Largest file budget exceeded: ${LARGEST_SIZE}KB > 200KB"; exit 1; fi
          else
            echo "‚ÑπÔ∏è  No dist directory present, skipping size checks."
          fi
      - name: Check for console.* usage in core library
        run: |
          echo "üîç Checking for console.* usage in core library..."
          CONSOLE_USAGE=$(grep -r "console\." src/lib/ --include="*.ts" --include="*.js" || true)
          if [ -n "$CONSOLE_USAGE" ]; then
            echo "‚ùå Console.* usage detected in core library:"; echo "$CONSOLE_USAGE"; exit 1; fi
          echo "‚úÖ No console.* usage in core library"
